setwd("C:/Users/dnzambuli/Documents/multivariate statistics")
install.packages("fdm2id")
install.packages("fdm2id")
library(fdm2id)
data(airquality)
head(airquality)
b = na.omit(airquality)
any(is.na(airquality))
data = airquality
# quantity of data
cat("number of rows:", nrow(data), "\nnumber of cols:", ncol(data), "\nnumber of values:", nrow(data) * ncol(data))
data = na.omit(airquality)
nrow(data)
# Get the pc
princ_comp = prcomp(data, scale = TRUE) #mean 0 and sd 1
# extract the eigen vectors
princ_comp$results
# Get the pc
princ_comp = prcomp(data, scale = TRUE) #mean 0 and sd 1
# extract the eigen vectors
princ_comp$rotation
eig_val = -1 * princ_comp$rotation
eig_val
View(airquality)
var_exp = princ_comp$sdev ^2 / princ_comp$sdev ^2
var_exp
var_exp = princ_comp$sdev ^2 / sum(princ_comp$sdev ^2)
var_exp
var_exp_tab = data.frame(PC = c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"PC6"),
var_exp = var_exp)
var_exp_tab$cum_sum = cumsum(var_exp)
var_exp_tab
var_exp_tab = data.frame(PC = c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"PC6"),
var_exp = var_exp)
# cummulative variation explained
var_exp_tab$cum_sum = cumsum(var_exp)
# percentage variation explained
var_exp_tab$perc_exp = var_exp_tab$cum_sum *100
# view
var_exp_tab
qplot(c(1:10), var_exp)+
geom_line() +
labs(x ="Principal Component",
y="Variance Explained",
title = "Scree Plot") +
ylim(0, 1)
library(ggplot2)
qplot(c(1:10), var_exp)+
geom_line() +
labs(x ="Principal Component",
y="Variance Explained",
title = "Scree Plot") +
ylim(0, 1)
library(ggplot2)
qplot(seq(1:10), var_exp)+
geom_line() +
labs(x ="Principal Component",
y="Variance Explained",
title = "Scree Plot") +
ylim(0, 1)
library(ggplot2)
qplot(seq(1:6), var_exp)+
geom_line() +
labs(x ="Principal Component",
y="Variance Explained",
title = "Scree Plot") +
ylim(0, 1)
?prcomp
eig_val[, 1:3]
install.packages("factoextra")
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "cos2",
col.var = "black",
gradient.cols = c("blue","coral","yellow"))
library(factoextra)
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "cos2",
col.var = "black",
gradient.cols = c("blue","coral","yellow"))
library(factoextra)
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "cos3",
col.var = "black",
gradient.cols = c("blue","coral","yellow"))
library(factoextra)
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "cos3",
col.var = "black",
gradient.cols = c("blue","skyblue","coral","yellow"))
library(factoextra)
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "cos2",
col.var = "black",
gradient.cols = c("blue","skyblue","coral","yellow"))
library(factoextra)
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "black",
col.var = "contrib",
gradient.cols = c("blue","skyblue","coral","yellow"))
library(factoextra)
fviz_pca_biplot(princ_comp,
label = "var",
col.ind = "black",
col.var = "contrib",
gradient.cols = c("blue","skyblue","coral","red"))
-0.55674991/-0.55816827
140/6
-0.14899189/-0.06390617 *100
0.65684217/0.14360812
-0.27511342/-0.55674991
cor_mat =cor(data)
cor_mat =cor(data)
cor_mat
install.packages("corplot")
install.packages("corrplot")
library(corrplot)
corrplot(cor_mat)
corrplot(cov(data))
